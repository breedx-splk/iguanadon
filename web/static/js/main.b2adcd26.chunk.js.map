{"version":3,"sources":["LeftNavMenu.js","Title.js","Subselect.js","Chart.js","dataloader.js","chart_updater.js","Dashboard.js","theme.js","index.js"],"names":["LeftNavMenu","updater","this","props","chartUpdater","List","Tooltip","title","placement","ListItem","button","onClick","showAllocations","ListItemIcon","ListItemText","primary","showGarbageCollection","showHeapUsage","HorizontalSplit","showThroughput","showStartupTime","Timer","Component","Title","Typography","component","variant","color","gutterBottom","children","Subselect","x","console","log","target","value","radioChanged","prefixes","chartProps","radioButtons","map","prefix","FormControlLabel","control","Radio","label","selectedItem","undefined","FormControl","FormLabel","RadioGroup","row","aria-label","name","onChange","handleChange","require","Chart","state","subsel","buildSubsel","seriesData","buildSeriesData","data","labels","series","legendContainer","document","getElementById","innerHTML","options","low","lineSmooth","Chartist","Interpolation","cardinal","tension","position","fullWidth","plugins","legend","Line","Paper","id","className","selection","setState","selectedSubItem","length","chooseSelectedItem","radioSelChanged","includes","filter","ser","doFetchAndConvert","url","fetch","then","response","text","bodyToChartProps","body","lines","trim","split","fields","shift","lineCols","line","c","Array","keys","index","addPrefixAndSuffix","replace","suffix","remapLargeUnits","unit","divisor","v","allPrefixes","Set","ChartUpdater","updateChartProps","Dashboard","drawerOpen","cp","classes","root","CssBaseline","AppBar","clsx","appBar","appBarShift","Toolbar","toolbar","IconButton","edge","menuButton","menuButtonHidden","noWrap","Link","href","window","alert","Drawer","paper","drawerPaper","drawerPaperClose","open","toolbarIcon","Divider","content","appBarSpacer","Container","maxWidth","container","Grid","spacing","item","xs","md","lg","withStyles","theme","display","paddingRight","alignItems","justifyContent","padding","mixins","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","marginLeft","width","enteringScreen","marginRight","flexGrow","whiteSpace","overflowX","breakpoints","up","height","overflow","paddingTop","paddingBottom","flexDirection","fixedHeight","withTheme","createMuiTheme","palette","main","secondary","textSecondary","error","red","A400","background","default","ReactDOM","render","ThemeProvider","querySelector"],"mappings":"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","file":"static/js/main.b2adcd26.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport DeleteSweep from '@material-ui/icons/DeleteSweep';\nimport LayersIcon from '@material-ui/icons/Layers';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport {HorizontalSplit, Timer} from \"@material-ui/icons\";\nimport {Tooltip} from \"@material-ui/core\";\nimport List from '@material-ui/core/List';\n\nexport default class LeftNavMenu extends Component {\n    render() {\n        const updater = this.props.chartUpdater;\n        return (\n            <List>\n                <div>\n                    <Tooltip title=\"Allocation\" placement={\"bottom-end\"}>\n                        <ListItem button onClick={() => updater.showAllocations() }>\n                            <ListItemIcon>\n                                <DashboardIcon/>\n                            </ListItemIcon>\n                            <ListItemText primary=\"Allocations\"/>\n                        </ListItem>\n                    </Tooltip>\n                    <Tooltip title=\"Garbage collection\" placement={\"bottom-end\"}>\n                        <ListItem button onClick={() => updater.showGarbageCollection() }>\n                            <ListItemIcon>\n                                <DeleteSweep/>\n                            </ListItemIcon>\n                            <ListItemText primary=\"Garbage collection\"/>\n                        </ListItem>\n                    </Tooltip>\n                    <Tooltip title=\"Heap usage\" placement={\"bottom-end\"}>\n                        <ListItem button onClick={() => updater.showHeapUsage()}>\n                            <ListItemIcon>\n                                <HorizontalSplit/>\n                            </ListItemIcon>\n                            <ListItemText primary=\"Heap usage\"/>\n                        </ListItem>\n                    </Tooltip>\n                    <Tooltip title=\"Throughput\" placement={\"bottom-end\"}>\n                        <ListItem button onClick={() => updater.showThroughput()}>\n                            <ListItemIcon>\n                                <LayersIcon/>\n                            </ListItemIcon>\n                            <ListItemText primary=\"Throughput\"/>\n                        </ListItem>\n                    </Tooltip>\n                    <Tooltip title=\"Startup time\" placement={\"bottom-end\"}>\n                        <ListItem button onClick={() => updater.showStartupTime()}>\n                            <ListItemIcon>\n                                <Timer/>\n                            </ListItemIcon>\n                            <ListItemText primary=\"Startup time\"/>\n                        </ListItem>\n                    </Tooltip>\n                </div>\n            </List>\n        );\n    }\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\n\nexport default function Title(props) {\n    return (\n        <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n            {props.children}\n        </Typography>\n    );\n}\n\nTitle.propTypes = {\n    children: PropTypes.node,\n};","import {Component} from \"react\";\nimport {FormControl, FormControlLabel, FormLabel, Radio, RadioGroup} from \"@material-ui/core\";\n\nexport default class Subselect extends Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    handleChange(x){\n        console.log(`handle change: ${x.target.value}`);\n        this.props.radioChanged(x.target.value);\n    }\n\n    render() {\n\n        const chartProps = this.props.chartProps;\n        const prefixes = chartProps.prefixes;\n\n        const radioButtons = prefixes.map(\n            prefix => <FormControlLabel value={prefix} control={<Radio/>} label={prefix} key={prefix}/>\n        );\n        const selectedItem = this.props.selectedItem === undefined ? prefixes[0] : this.props.selectedItem;\n        return (\n            <FormControl component=\"fieldset\">\n                <FormLabel component=\"legend\">sub series:</FormLabel>\n                <RadioGroup row aria-label=\"subseries\" name=\"subseries\" value={selectedItem} onChange={x => this.handleChange(x)}>\n                    {radioButtons}\n                </RadioGroup>\n            </FormControl>\n        );\n    }\n}\n","import React, {Component} from 'react';\nimport Chartist from 'chartist';\nimport Title from './Title';\nimport Subselect from './Subselect';\nimport Paper from \"@material-ui/core/Paper\";\nrequire('chartist-plugin-legend');\n\nexport default class Chart extends Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n        };\n    }\n\n    render() {\n        const title = this.props.chartProps.title;\n        const chartProps = this.props.chartProps;\n\n        const subsel = this.buildSubsel()\n        const seriesData = this.buildSeriesData(chartProps);\n        const data = {\n            labels: chartProps.labels,\n            series: seriesData\n        };\n        const legendContainer = document.getElementById('legend')\n        if(legendContainer) legendContainer.innerHTML = \"\"; // hacky hack\n        const options = {\n            low: 0,\n            lineSmooth: Chartist.Interpolation.cardinal({\n                tension: 0.4\n            }),\n            position: 'bottom',\n            fullWidth: true,\n            plugins: [\n                Chartist.plugins.legend({\n                    position: legendContainer\n                })\n            ]\n        }\n        if(data.labels){\n            const chart = new Chartist.Line('#chart', data, options);\n        }\n\n        return (\n            <Paper>\n                <Title>{title}</Title>\n                {subsel}\n                <div id='chart' className=\"ct-chart ct-perfect-fourth\">\n                </div>\n            </Paper>\n        );\n    }\n\n    radioSelChanged(selection){\n        this.setState({\n            selectedSubItem: selection\n        }); // force redraw with new selection\n    }\n\n    buildSubsel() {\n        const chartProps = this.props.chartProps;\n        if (chartProps?.series?.length <= 2) {\n            return <span/>\n        }\n        const selectedItem = this.chooseSelectedItem();\n        return <Subselect chartProps={chartProps} radioChanged={x => this.radioSelChanged(x)} selectedItem={selectedItem}/>\n    }\n\n    chooseSelectedItem() {\n        const chartProps = this.props.chartProps;\n        if(chartProps.prefixes.includes(this.state.selectedSubItem)){\n            return this.state.selectedSubItem;\n        }\n        return chartProps.series[0].prefix;\n    }\n\n    buildSeriesData(chartProps) {\n        if(chartProps?.series?.length === 2){\n            return chartProps.series;\n        }\n        if(!this.state.selectedSubItem){\n            if(chartProps?.series?.length === 0){\n                console.log(\"First time in, no data...\");\n                return [];\n            }\n        }\n        const selectedSubItem = this.chooseSelectedItem();\n        return chartProps.series.filter(ser => {\n            return ser.prefix === selectedSubItem\n        });\n    }\n}","\nexport function fetchAllocations() {\n    const url = 'https://breedx-splk.github.io/iguanodon/web/results/allocations.csv';\n    return doFetchAndConvert(url);\n}\n\nexport function fetchGarbageCollection(){\n    const url = 'https://breedx-splk.github.io/iguanodon/web/results/garbage_collection.csv';\n    return doFetchAndConvert(url);\n}\n\nexport function fetchStartupTime() {\n    const url = 'https://breedx-splk.github.io/iguanodon/web/results/start_time.csv';\n    return doFetchAndConvert(url);\n}\n\nexport function fetchThroughput() {\n    const url = 'https://breedx-splk.github.io/iguanodon/web/results/throughput.csv';\n    return doFetchAndConvert(url);\n}\n\nexport function fetchHeap() {\n    const url = 'https://breedx-splk.github.io/iguanodon/web/results/heap_used.csv';\n    return doFetchAndConvert(url);\n}\n\nfunction doFetchAndConvert(url){\n    return fetch(url)\n        .then(response => response.text())\n        .then(bodyToChartProps);\n}\n\nfunction bodyToChartProps(body){\n    const lines = body.trim().split('\\n');\n    const fields = lines.shift().split(',');\n    const lineCols = lines.map(line => line.split(','));\n    const labels = lineCols.map(c => c[0]);\n    const series = [...Array(fields.length - 1).keys()]\n        .map(index => [index, lineCols.map(c => c[index + 1])])\n        .map(series => ({\n            name: fields[series[0]+1],\n            data: series[1]\n        }));\n    return {\n        labels: labels,\n        fields: fields,\n        series: series\n    }\n}\n","\nimport {fetchAllocations, fetchGarbageCollection, fetchHeap, fetchStartupTime, fetchThroughput} from './dataloader'\n\nfunction addPrefixAndSuffix(series){\n    return series.map(ser => {\n        ser.prefix = ser.name.replace(/-with-agent/, '').replace(/-no-agent/, '');\n        ser.suffix = ser.name.replace(/^.*-(with-agent|no-agent)$/, '$1');\n        return ser;\n    });\n}\n\nfunction remapLargeUnits(data){\n    data.unit = 'MB';\n    let divisor = 1024*1024;\n    if(data.series[0].data[0] > 1024*1024*1024){\n        data.unit = 'GB';\n        divisor = 1024*1024*1024;\n    }\n    data.series = data.series.map(series => {\n        series.data = series.data.map( v => v / divisor)\n        return series;\n    })\n    return data;\n}\n\nfunction allPrefixes(series) {\n    return [...new Set(series.map(ser => ser.prefix))];\n}\n\nexport default class ChartUpdater {\n\n    constructor(updateChartProps) {\n        this.updateChartProps = updateChartProps;\n    }\n\n    showAllocations() {\n        console.log('Showing allocations');\n        const updater = this.updateChartProps;\n        fetchAllocations()\n            .then(remapLargeUnits)\n            .then(data => {\n                updater({\n                    title: `Allocations (${data.unit})`,\n                    labels: data.labels,\n                    series: addPrefixAndSuffix(data.series),\n                    prefixes: allPrefixes(data.series)\n                });\n            });\n    }\n\n    showGarbageCollection() {\n        console.log('Showing garbage collection info');\n        const updater = this.updateChartProps;\n        fetchGarbageCollection()\n            .then(data => {\n                updater({\n                    title: `Garbage Collections (sum time in seconds)`,\n                    labels: data.labels,\n                    series: addPrefixAndSuffix(data.series),\n                    prefixes: allPrefixes(data.series)\n                });\n            })\n    }\n\n    showHeapUsage() {\n        console.log('Showing heap usage');\n        const updater = this.updateChartProps;\n        fetchHeap()\n            .then(remapLargeUnits)\n            .then(data => {\n                updater({\n                    title: `Heap usage (${data.unit})`,\n                    labels: data.labels,\n                    series: addPrefixAndSuffix(data.series),\n                    prefixes: allPrefixes(data.series)\n                });\n            })\n    }\n\n    showThroughput() {\n        console.log('Showing throughput');\n        const updater = this.updateChartProps;\n        fetchThroughput()\n            .then(data => {\n                updater({\n                    title: `Throughput (time/request)`,\n                    labels: data.labels,\n                    series: addPrefixAndSuffix(data.series),\n                    prefixes: allPrefixes(data.series)\n                });\n            })\n    }\n\n    showStartupTime(){\n        console.log('Showing startup times');\n        const updater = this.updateChartProps;\n        fetchStartupTime()\n            .then(data => {\n                updater({\n                    title: \"Startup time\",\n                    labels: data.labels,\n                    series: addPrefixAndSuffix(data.series)\n                });\n            });\n    }\n}","import React, {Component} from 'react';\nimport clsx from 'clsx';\nimport {useTheme, withStyles} from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Link from '@material-ui/core/Link';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport LeftNavMenu from './LeftNavMenu';\nimport Chart from './Chart';\nimport ChartUpdater from \"./chart_updater\";\n\nconst drawerWidth = 240;\n\nconst useStyles = (theme => ({\n    root: {\n        display: 'flex',\n    },\n    toolbar: {\n        paddingRight: 24, // keep right padding when drawer closed\n    },\n    toolbarIcon: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'flex-end',\n        padding: '0 8px',\n        ...theme.mixins.toolbar,\n    },\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    appBarShift: {\n        marginLeft: drawerWidth,\n        width: `calc(100% - ${drawerWidth}px)`,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    menuButton: {\n        marginRight: 36,\n    },\n    menuButtonHidden: {\n        display: 'none',\n    },\n    title: {\n        flexGrow: 1,\n        'padding-top': 5,\n    },\n    drawerPaper: {\n        position: 'relative',\n        whiteSpace: 'nowrap',\n        width: drawerWidth,\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n        'padding-top': 5,\n    },\n    drawerPaperClose: {\n        overflowX: 'hidden',\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        width: theme.spacing(7),\n        [theme.breakpoints.up('sm')]: {\n            width: theme.spacing(9),\n        },\n        'padding-top': 5,\n    },\n    appBarSpacer: theme.mixins.toolbar,\n    content: {\n        flexGrow: 1,\n        height: '100vh',\n        overflow: 'auto',\n    },\n    container: {\n        paddingTop: theme.spacing(4),\n        paddingBottom: theme.spacing(4),\n    },\n    paper: {\n        padding: theme.spacing(2),\n        display: 'flex',\n        overflow: 'auto',\n        flexDirection: 'column',\n    },\n    fixedHeight: {\n        height: 240,\n    },\n}));\n\nclass Dashboard extends Component {\n\n    constructor(props){\n        super(props)\n        this.state = {\n            drawerOpen: false,\n            chartProps: {\n                title: \"Choose a category on the left\",\n                series: []\n            }\n        }\n        this.chartUpdater = new ChartUpdater(cp => this.setState({ chartProps: cp}));\n    }\n\n    render() {\n        const { classes } = this.props;\n        return (\n            <div className={classes.root}>\n                <CssBaseline/>\n                <AppBar position=\"absolute\" className={clsx(classes.appBar, this.state.drawerOpen && classes.appBarShift)}>\n                    <Toolbar className={classes.toolbar}>\n                        <IconButton\n                            edge=\"start\"\n                            color=\"inherit\"\n                            aria-label=\"open drawer\"\n                            onClick={() => this.setState({ drawerOpen: true})}\n                            className={clsx(classes.menuButton, this.state.drawerOpen && classes.menuButtonHidden)}\n                        >\n                            <MenuIcon/>\n                        </IconButton>\n                        <Typography component=\"h1\" variant=\"h4\" color=\"inherit\" noWrap className={classes.title}>\n                            OpenTelemetry java agent overhead <Link color=\"textSecondary\" variant=\"h6\"\n                                                                                               href=\"#\"\n                                                                                               onClick={\n                                                                                                   () => window.alert('very much need to qualify this')\n                                                                                               }><sup>*</sup></Link>\n                        </Typography>\n                        {/*<IconButton color=\"inherit\">*/}\n                        {/*    <Badge badgeContent={4} color=\"secondary\">*/}\n                        {/*        <NotificationsIcon/>*/}\n                        {/*    </Badge>*/}\n                        {/*</IconButton>*/}\n                    </Toolbar>\n                </AppBar>\n                <Drawer\n                    variant=\"permanent\"\n                    classes={{\n                        paper: clsx(classes.drawerPaper, !this.state.drawerOpen && classes.drawerPaperClose),\n                    }}\n                    open={this.state.drawerOpen}\n                >\n                    <div className={classes.toolbarIcon}>\n                        <IconButton onClick={() => this.setState({ drawerOpen: false})}>\n                            <ChevronLeftIcon/>\n                        </IconButton>\n                    </div>\n                    <Divider/>\n                    <LeftNavMenu chartUpdater={this.chartUpdater}/>\n                </Drawer>\n                <main className={classes.content}>\n                    <div className={classes.appBarSpacer}/>\n                    <Container maxWidth=\"lg\" className={classes.container}>\n                        <Grid container spacing={3}>\n                            <Grid item xs={10} md={10} lg={10}>\n                                <Chart chartProps={this.state.chartProps}/>\n                            </Grid>\n                            <Grid item xs={2} md={2} lg={2}>\n                                <div id=\"legend\"/>\n                            </Grid>\n                        </Grid>\n                    </Container>\n                </main>\n            </div>\n        );\n    }\n}\nexport default withStyles(useStyles, { withTheme: true })(Dashboard);","import { red } from '@material-ui/core/colors';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\n// A custom theme for this app\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#640d14',\n    },\n    secondary: {\n      main: '#19857b',\n    },\n    textSecondary: {\n      main: '#FFFFFF'\n    },\n    error: {\n      main: red.A400,\n    },\n    background: {\n      default: '#fff',\n    },\n  },\n});\n\nexport default theme;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport Dashboard from './Dashboard';\nimport theme from './theme';\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n    <CssBaseline />\n    <Dashboard />\n  </ThemeProvider>,\n  document.querySelector('#root'),\n);\n"],"sourceRoot":""}